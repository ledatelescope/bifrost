name: "Build and Test"
on: [push, pull_request]
jobs:
  pre_build:
    runs-on: ubuntu-latest
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
    steps:
      - id: skip_check
        uses: fkirc/skip-duplicate-actions@v3.4.1
        with:
          concurrent_skipping: 'same_content'
          skip_after_successful_duplicate: 'true'
          do_not_skip: '["pull_request", "workflow_dispatch", "schedule"]'
  build:
    needs: pre_build
    if: ${{ needs.pre_build.outputs.should_skip != 'true' }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [self-hosted, ubuntu-latest, macos-latest]
        python-version: ['2.7', '3.6', '3.8']
        exclude:
          - os: macos-latest
            python-version: 2.7
      fail-fast: false
    steps:
      - name: "Software Install - Ubuntu"
        if: ${{ matrix.os == 'ubuntu-latest' || matrix.os == 'self-hosted' }}
        run: |
          sudo apt-get update && \
          sudo apt-get install -y \
            build-essential \
            ca-certificates \
            curl \
            exuberant-ctags \
            gfortran \
            git \
            libopenblas-dev \
            pkg-config \
            software-properties-common
      - name: "Software Install - MacOS"
        if: ${{ matrix.os == 'macos-latest' }}
        run: |
          brew install \
            curl \
            ctags-exuberant \
            gawk \
            gnu-sed \
            pkg-config
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - uses: actions/checkout@v2
      - name: "Software Install - Python"
        run: python -m pip install \
               setuptools \
               numpy \
               matplotlib \
               contextlib2 \
               simplejson \
               pint \
               graphviz \
               ctypesgen==1.0.2 \
               coverage
      - name: "Software Install - Python, part 2"
        if: ${{ matrix.os == 'self-hosted' && matrix.python-version != '2.7' }}
        run: python -m pip install \
               cupy \
               pycuda
      - name: "Build and Install"
        run: |
          ./configure
          make -j all
          sudo make install
      - name: Test
        env:
          LD_LIBRARY_PATH: /usr/local/lib:${{ env.LD_LIBRARY_PATH }}
        run: |
          python -m pip install scipy
          cd test
          bash ./download_test_data.sh
          python -c "from bifrost import telemetry; telemetry.disable()"
          coverage run --source=bifrost.ring,bifrost,bifrost.pipeline -m unittest discover
          coverage xml
      - name: "Upload Coverage"
        env:
           UNITTEST_OS: ${{ matrix.os }}
           UNITTEST_PY: ${{ matrix.python-version }}
        if: ${{ matrix.os == 'self-hosted' && matrix.python-version == '3.8' }}
        uses: codecov/codecov-action@v2
        with:
          directory: ./test/
          env_vars: UNITTEST_OS,UNITTEST_PY
          fail_ci_if_error: false
          verbose: true
